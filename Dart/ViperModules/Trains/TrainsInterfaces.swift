//
//  TrainsInterfaces.swift
//  Dart
//
//  Created by Tomislav Luketic on 30/06/2020.
//  Copyright (c) 2020 lux. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

enum TrainsNavigationOption {
  case trainMap(info: StationAndTrainInfo, client: RailClientType)
}

protocol TrainsWireframeInterface: WireframeInterface {
   func navigate(to option: TrainsNavigationOption)
}

protocol TrainsViewInterface: ViewInterface {
  func refreshTrains()
  func trainsDataChanged(containing directions: [String])
}

protocol TrainsPresenterInterface: PresenterInterface {
  var filteredTrains: [(direction: String, trains: [ObjTrainPositions])] { get }
  func getCurrentTrains()
  func directionChanged(index: Int)
  func trainSelected(at indexPath: IndexPath)
}

protocol TrainsInteractorInterface: InteractorInterface {
  var client: RailClientType { get }
  func getCurrentTrains(completion: @escaping TrainPositionsCompletionBlock)
  func getAllStations(type: String?, completion: @escaping StationCompletionBlock)
}

