//
//  TrainInteractor.swift
//  Dart
//
//  Created by Tomislav Luketic on 28/06/2020.
//  Copyright (c) 2020 lux. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation
import Combine

final class TrainInteractor {
  
  private let client: RailClientType
  
  private var subscription: AnyCancellable?
  private lazy var timerPublisher: Timer.TimerPublisher = {
    let publisher = Timer.publish(every: 10, on: RunLoop.main, in: .common)
    return publisher
  }()
  
  var onTimer: (() -> Void)?

  init(client: RailClientType) {
    self.client = client
    registerSubscription()
  }
  
  private func registerSubscription() {
    subscription = timerPublisher
      .autoconnect()
      .sink { [weak self] _ in
        if let onTimer = self?.onTimer {
          RailClient.displayProgress = false
          onTimer()
        }
    }
  }
  
  deinit {
    RailClient.displayProgress = true
  }
}

// MARK: - Extensions -

extension TrainInteractor: TrainInteractorInterface {
  func getCurrentTrains(completion: @escaping TrainPositionsCompletionBlock) {
    client.getCurrentTrains { result in
      completion(result)
    }
  }
}
